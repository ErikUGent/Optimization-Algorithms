from curses import A_LEFT
from networkx import DiGraph, from_numpy_matrix, relabel_nodes, set_node_attributes
from numpy import array
from vrpy import VehicleRoutingProblem
import networkx as nx
import time

def compose (f, g):
    return lambda x : f(g)

# Distance matrix
DISTANCES = [
 [  0,  45,  45,  45,  44,  44,  44,  43,  43,  46,  46, 676, 675, 674, 224, 224, 223, 224, 226, 227, 229, 225, 225, 227, 673, 672, 671, 229, 231, 233, 233, 234, 236,  0],
 [  0,   0,   1,   1,   2,   3,   4,   4,   4,   2,   1, 631, 630, 629, 198, 198, 197, 198, 199, 201, 202, 200, 199, 201, 629, 628, 627, 206, 208, 211, 208, 210, 212, 45],
 [  0,   1,   0,   1,   1,   2,   3,   3,   4,   3,   2, 632, 631, 630, 199, 198, 197, 199, 200, 202, 203, 201, 200, 201, 629, 628, 627, 207, 209, 211, 209, 211, 213, 45],
 [  0,   1,   1,   0,   1,   1,   2,   3,   3,   3,   2, 632, 631, 630, 200, 199, 198, 200, 201, 202, 204, 201, 201, 202, 630, 629, 628, 208, 209, 212, 210, 212, 214, 45],
 [  0,   2,   1,   1,   0,   1,   2,   2,   2,   4,   3, 632, 632, 631, 200, 200, 199, 200, 201, 203, 204, 202, 201, 203, 630, 629, 628, 208, 210, 213, 210, 212, 215, 44],
 [  0,   3,   2,   1,   1,   0,   1,   1,   2,   5,   4, 633, 632, 631, 201, 200, 199, 201, 202, 204, 205, 203, 202, 203, 630, 630, 629, 209, 211, 213, 211, 213, 215, 44],
 [  0,   4,   3,   2,   2,   1,   0,   1,   1,   6,   5, 633, 632, 632, 202, 201, 200, 202, 203, 205, 206, 204, 203, 204, 631, 630, 629, 210, 212, 214, 212, 214, 216, 44],
 [  0,   4,   3,   3,   2,   1,   1,   0,   0,   6,   5, 634, 633, 632, 203, 202, 201, 202, 203, 205, 207, 204, 204, 205, 632, 631, 630, 210, 212, 215, 212, 214, 217, 43],
 [  0,   4,   4,   3,   2,   2,   1,   0,   0,   6,   6, 634, 633, 633, 203, 202, 201, 203, 204, 205, 207, 204, 204, 205, 632, 631, 630, 211, 212, 215, 213, 215, 217, 43],
 [  0,   2,   3,   3,   4,   5,   6,   6,   6,   0,   1, 630, 629, 628, 196, 196, 195, 196, 197, 199, 200, 198, 197, 199, 627, 626, 625, 204, 206, 209, 206, 208, 211, 46],
 [  0,   1,   2,   2,   3,   4,   5,   5,   6,   1,   0, 631, 630, 629, 197, 197, 196, 197, 198, 200, 201, 199, 198, 200, 628, 627, 626, 205, 207, 209, 207, 209, 211, 46],
 [  0, 631, 632, 632, 632, 633, 633, 634, 634, 630, 631,   0,   3,   6, 526, 524, 523, 522, 521, 520, 519, 527, 523, 522,   9,  11,  14, 536, 535, 535, 528, 528, 528, 676],
 [  0, 630, 631, 631, 632, 632, 632, 633, 633, 629, 630,   3,   0,   3, 524, 522, 521, 520, 519, 518, 517, 525, 522, 521,   5,   8,  11, 534, 534, 533, 526, 526, 526, 675],
 [  0, 629, 630, 630, 631, 631, 632, 632, 633, 628, 629,   6,   3,   0, 522, 521, 520, 519, 518, 517, 515, 523, 520, 519,   2,   5,   8, 532, 532, 532, 525, 525, 525, 674],
 [  0, 198, 199, 200, 200, 201, 202, 203, 203, 196, 197, 526, 524, 522, 0,   2,   4,   4,   5,   6,   7,   2,   2,   4, 521, 520, 518,  16, 17,  19,  12,  14,  16, 224],
 [  0, 198, 198, 199, 200, 200, 201, 202, 202, 196, 197, 524, 522, 521, 2,   0,   2,   2,   3,   5,   6,   4,   2,   3, 520, 518, 516,  18, 19,  21,  14,  16,  18, 224],
 [  0, 197, 197, 198, 199, 199, 200, 201, 201, 195, 196, 523, 521, 520, 4,   2,   0,   2,   3,   4,   6,   6,   3,   4, 518, 517, 515,  20, 21,  23,  16,  18,  20, 223],
 [  0, 198, 199, 200, 200, 201, 202, 202, 203, 196, 197, 522, 520, 519, 4,   2,   2,   0,   1,   3,   5,   6,   3,   3, 517, 516, 514,  20, 21,  23,  15,  17,  19, 224],
 [  0, 199, 200, 201, 201, 202, 203, 203, 204, 197, 198, 521, 519, 518, 5,   3,   3,   1,   0,   2,   3,   6,   3,   2, 516, 515, 513,  20, 21,  22,  14,  16,  19, 226],
 [  0, 201, 202, 202, 203, 204, 205, 205, 205, 199, 200, 520, 518, 517, 6,   5,   4,   3,   2,   0,   2,   7,   4,   3, 515, 514, 512,  20, 21,  22,  14,  16,  18, 227],
 [  0, 202, 203, 204, 204, 205, 206, 207, 207, 200, 201, 519, 517, 515, 7,   6,   6,   5,   3,   2,   0,   8,   5,   4, 514, 512, 511,  20, 21,  23,  14,  16,  18, 229],
 [  0, 200, 201, 201, 202, 203, 204, 204, 204, 198, 199, 527, 525, 523, 2,   4,   6,   6,   6,   7,   8,   0,   4,   5, 522, 520, 519,  13, 15,  17,  10,  12,  14, 225],
 [  0, 199, 200, 201, 201, 202, 203, 204, 204, 197, 198, 523, 522, 520, 2,   2,   3,   3,   3,   4,   5,   4,   0,   1, 519, 517, 516,  17, 18,  20,  12,  14,  17, 225],
 [  0, 201, 201, 202, 203, 203, 204, 205, 205, 199, 200, 522, 521, 519, 4,   3,   4,   3,   2,   3,   4,   5,   1,   0, 518, 516, 514,  17, 18,  20,  12,  14,  16, 227],
 [  0, 629, 629, 630, 630, 630, 631, 632, 632, 627, 628,   9,   5,   2, 521, 520, 518, 517, 516, 515, 514, 522, 519, 518,   0,   3,   6, 531, 531, 530, 523, 523, 523, 673],
 [  0, 628, 628, 629, 629, 630, 630, 631, 631, 626, 627,  11,   8,   5, 520, 518, 517, 516, 515, 514, 512, 520, 517, 516,   3,   0,   3, 529, 529, 529, 522, 522, 522, 672],
 [  0, 627, 627, 628, 628, 629, 629, 630, 630, 625, 626,  14,  11,   8, 518, 516, 515, 514, 513, 512, 511, 519, 516, 514,   6,   3,   0, 527, 527, 527, 520, 520, 520, 671],
 [  0, 206, 207, 208, 208, 209, 210, 210, 211, 204, 205, 536, 534, 532, 16,  18,  20,  20,  20,  20,  20,  13,  17,  17, 531, 529, 527,   0, 2,   4,   8,   8,   8, 229],
 [  0, 208, 209, 209, 210, 211, 212, 212, 212, 206, 207, 535, 534, 532, 17,  19,  21,  21,  21,  21,  21,  15,  18,  18, 531, 529, 527,   2, 0,   3,   8,   7,   8, 231],
 [  0, 211, 211, 212, 213, 213, 214, 215, 215, 209, 209, 535, 533, 532, 19,  21,  23,  23,  22,  22,  23,  17,  20,  20, 530, 529, 527,   4, 3,   0,   9,   7,   7, 233],
 [  0, 208, 209, 210, 210, 211, 212, 212, 213, 206, 207, 528, 526, 525, 12,  14,  16,  15,  14,  14,  14,  10,  12,  12, 523, 522, 520,   8, 8,   9,   0,   2,   5, 233],
 [  0, 210, 211, 212, 212, 213, 214, 214, 215, 208, 209, 528, 526, 525, 14,  16,  18,  17,  16,  16,  16,  12,  14,  14, 523, 522, 520,   8, 7,   7,   2,   0,   2, 234],
 [  0, 212, 213, 214, 215, 215, 216, 217, 217, 211, 211, 528, 526, 525, 16,  18,  20,  19,  19,  18,  18,  14,  17,  16, 523, 522, 520,   8, 8,   7,   5,   2,   0, 236],
 [  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 ]

TRAVEL_TIMES = [
 [  0,  45,  45,  45,  44,  44,  44,  43,  43,  46,  46, 676, 675, 674, 224, 224, 223, 224, 226, 227, 229, 225, 225, 227, 673, 672, 671, 229, 231, 233, 233, 234, 236,  0],
 [  0,   0,   1,   1,   2,   3,   4,   4,   4,   2,   1, 631, 630, 629, 198, 198, 197, 198, 199, 201, 202, 200, 199, 201, 629, 628, 627, 206, 208, 211, 208, 210, 212, 45],
 [  0,   1,   0,   1,   1,   2,   3,   3,   4,   3,   2, 632, 631, 630, 199, 198, 197, 199, 200, 202, 203, 201, 200, 201, 629, 628, 627, 207, 209, 211, 209, 211, 213, 45],
 [  0,   1,   1,   0,   1,   1,   2,   3,   3,   3,   2, 632, 631, 630, 200, 199, 198, 200, 201, 202, 204, 201, 201, 202, 630, 629, 628, 208, 209, 212, 210, 212, 214, 45],
 [  0,   2,   1,   1,   0,   1,   2,   2,   2,   4,   3, 632, 632, 631, 200, 200, 199, 200, 201, 203, 204, 202, 201, 203, 630, 629, 628, 208, 210, 213, 210, 212, 215, 44],
 [  0,   3,   2,   1,   1,   0,   1,   1,   2,   5,   4, 633, 632, 631, 201, 200, 199, 201, 202, 204, 205, 203, 202, 203, 630, 630, 629, 209, 211, 213, 211, 213, 215, 44],
 [  0,   4,   3,   2,   2,   1,   0,   1,   1,   6,   5, 633, 632, 632, 202, 201, 200, 202, 203, 205, 206, 204, 203, 204, 631, 630, 629, 210, 212, 214, 212, 214, 216, 44],
 [  0,   4,   3,   3,   2,   1,   1,   0,   0,   6,   5, 634, 633, 632, 203, 202, 201, 202, 203, 205, 207, 204, 204, 205, 632, 631, 630, 210, 212, 215, 212, 214, 217, 43],
 [  0,   4,   4,   3,   2,   2,   1,   0,   0,   6,   6, 634, 633, 633, 203, 202, 201, 203, 204, 205, 207, 204, 204, 205, 632, 631, 630, 211, 212, 215, 213, 215, 217, 43],
 [  0,   2,   3,   3,   4,   5,   6,   6,   6,   0,   1, 630, 629, 628, 196, 196, 195, 196, 197, 199, 200, 198, 197, 199, 627, 626, 625, 204, 206, 209, 206, 208, 211, 46],
 [  0,   1,   2,   2,   3,   4,   5,   5,   6,   1,   0, 631, 630, 629, 197, 197, 196, 197, 198, 200, 201, 199, 198, 200, 628, 627, 626, 205, 207, 209, 207, 209, 211, 46],
 [  0, 631, 632, 632, 632, 633, 633, 634, 634, 630, 631,   0,   3,   6, 526, 524, 523, 522, 521, 520, 519, 527, 523, 522,   9,  11,  14, 536, 535, 535, 528, 528, 528, 676],
 [  0, 630, 631, 631, 632, 632, 632, 633, 633, 629, 630,   3,   0,   3, 524, 522, 521, 520, 519, 518, 517, 525, 522, 521,   5,   8,  11, 534, 534, 533, 526, 526, 526, 675],
 [  0, 629, 630, 630, 631, 631, 632, 632, 633, 628, 629,   6,   3,   0, 522, 521, 520, 519, 518, 517, 515, 523, 520, 519,   2,   5,   8, 532, 532, 532, 525, 525, 525, 674],
 [  0, 198, 199, 200, 200, 201, 202, 203, 203, 196, 197, 526, 524, 522, 0,   2,   4,   4,   5,   6,   7,   2,   2,   4, 521, 520, 518,  16, 17,  19,  12,  14,  16, 224],
 [  0, 198, 198, 199, 200, 200, 201, 202, 202, 196, 197, 524, 522, 521, 2,   0,   2,   2,   3,   5,   6,   4,   2,   3, 520, 518, 516,  18, 19,  21,  14,  16,  18, 224],
 [  0, 197, 197, 198, 199, 199, 200, 201, 201, 195, 196, 523, 521, 520, 4,   2,   0,   2,   3,   4,   6,   6,   3,   4, 518, 517, 515,  20, 21,  23,  16,  18,  20, 223],
 [  0, 198, 199, 200, 200, 201, 202, 202, 203, 196, 197, 522, 520, 519, 4,   2,   2,   0,   1,   3,   5,   6,   3,   3, 517, 516, 514,  20, 21,  23,  15,  17,  19, 224],
 [  0, 199, 200, 201, 201, 202, 203, 203, 204, 197, 198, 521, 519, 518, 5,   3,   3,   1,   0,   2,   3,   6,   3,   2, 516, 515, 513,  20, 21,  22,  14,  16,  19, 226],
 [  0, 201, 202, 202, 203, 204, 205, 205, 205, 199, 200, 520, 518, 517, 6,   5,   4,   3,   2,   0,   2,   7,   4,   3, 515, 514, 512,  20, 21,  22,  14,  16,  18, 227],
 [  0, 202, 203, 204, 204, 205, 206, 207, 207, 200, 201, 519, 517, 515, 7,   6,   6,   5,   3,   2,   0,   8,   5,   4, 514, 512, 511,  20, 21,  23,  14,  16,  18, 229],
 [  0, 200, 201, 201, 202, 203, 204, 204, 204, 198, 199, 527, 525, 523, 2,   4,   6,   6,   6,   7,   8,   0,   4,   5, 522, 520, 519,  13, 15,  17,  10,  12,  14, 225],
 [  0, 199, 200, 201, 201, 202, 203, 204, 204, 197, 198, 523, 522, 520, 2,   2,   3,   3,   3,   4,   5,   4,   0,   1, 519, 517, 516,  17, 18,  20,  12,  14,  17, 225],
 [  0, 201, 201, 202, 203, 203, 204, 205, 205, 199, 200, 522, 521, 519, 4,   3,   4,   3,   2,   3,   4,   5,   1,   0, 518, 516, 514,  17, 18,  20,  12,  14,  16, 227],
 [  0, 629, 629, 630, 630, 630, 631, 632, 632, 627, 628,   9,   5,   2, 521, 520, 518, 517, 516, 515, 514, 522, 519, 518,   0,   3,   6, 531, 531, 530, 523, 523, 523, 673],
 [  0, 628, 628, 629, 629, 630, 630, 631, 631, 626, 627,  11,   8,   5, 520, 518, 517, 516, 515, 514, 512, 520, 517, 516,   3,   0,   3, 529, 529, 529, 522, 522, 522, 672],
 [  0, 627, 627, 628, 628, 629, 629, 630, 630, 625, 626,  14,  11,   8, 518, 516, 515, 514, 513, 512, 511, 519, 516, 514,   6,   3,   0, 527, 527, 527, 520, 520, 520, 671],
 [  0, 206, 207, 208, 208, 209, 210, 210, 211, 204, 205, 536, 534, 532, 16,  18,  20,  20,  20,  20,  20,  13,  17,  17, 531, 529, 527,   0, 2,   4,   8,   8,   8, 229],
 [  0, 208, 209, 209, 210, 211, 212, 212, 212, 206, 207, 535, 534, 532, 17,  19,  21,  21,  21,  21,  21,  15,  18,  18, 531, 529, 527,   2, 0,   3,   8,   7,   8, 231],
 [  0, 211, 211, 212, 213, 213, 214, 215, 215, 209, 209, 535, 533, 532, 19,  21,  23,  23,  22,  22,  23,  17,  20,  20, 530, 529, 527,   4, 3,   0,   9,   7,   7, 233],
 [  0, 208, 209, 210, 210, 211, 212, 212, 213, 206, 207, 528, 526, 525, 12,  14,  16,  15,  14,  14,  14,  10,  12,  12, 523, 522, 520,   8, 8,   9,   0,   2,   5, 233],
 [  0, 210, 211, 212, 212, 213, 214, 214, 215, 208, 209, 528, 526, 525, 14,  16,  18,  17,  16,  16,  16,  12,  14,  14, 523, 522, 520,   8, 7,   7,   2,   0,   2, 234],
 [  0, 212, 213, 214, 215, 215, 216, 217, 217, 211, 211, 528, 526, 525, 16,  18,  20,  19,  19,  18,  18,  14,  17,  16, 523, 522, 520,   8, 8,   7,   5,   2,   0, 236],
 [  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 ]

# Time windows (key: node, value: lower/upper bound)
TIME_WINDOWS_LOWER = {0: 0, 1: 200, 2: 400, 3: 600, 4: 0, 5: 680, 6: 900, 7: 900, 8: 780, 9: 900, 10: 700, 11: 0, 12: 200, 13: 0, 14: 600, 15: 900, 16: 200, 17: 0, 18: 0, 19: 800, 20: 600, 21: 500, 22: 200, 23: 650, 24: 700, 25: 200, 26: 300, 27: 800, 28: 600, 29: 200, 30: 800, 31: 150, 32: 1500,}
TIME_WINDOWS_UPPER = {1: 400, 2: 600, 3: 900, 4: 500, 5: 1200, 6: 1000, 7: 1200, 8: 1400, 9: 1000, 10: 1000, 11: 1000, 12: 1500, 13: 800, 14: 900, 15: 1200, 16: 350, 17: 900, 18: 1000, 19: 1000, 20: 700, 21: 900, 22: 300, 23: 800, 24: 1000, 25: 1100, 26: 1400, 27: 1800, 28: 1700, 29: 1250, 30: 1300, 31: 1300, 32: 2000,}

start_time = time.time()

# Transform distance matrix into DiGraph
A = array(DISTANCES, dtype=[("cost", int)])
G_d = from_numpy_matrix(A, create_using=DiGraph())

# Transform time matrix into DiGraph
A = array(TRAVEL_TIMES, dtype=[("time", int)])
G_t = from_numpy_matrix(A, create_using=DiGraph())

# Merge
G = nx.compose(G_d,G_t)

# Set time windows
set_node_attributes(G, values=TIME_WINDOWS_LOWER, name="lower")
set_node_attributes(G, values=TIME_WINDOWS_UPPER, name="upper")

# The depot is relabeled as Source and Sink
G = relabel_nodes(G, {0: "Source", 33: "Sink"})

# The VRP is defined and solved
prob = VehicleRoutingProblem(G, num_stops=None, load_capacity=None, duration=None, time_windows=True, pickup_delivery=False, distribution_collection=False, drop_penalty=None, fixed_cost=0, num_vehicles=4, use_all_vehicles=False, periodic=None, mixed_fleet=False, minimize_global_span=False)
#prob = VehicleRoutingProblem(G, time_windows=True)
prob.solve()

print(prob.best_routes_cost)
print(prob.best_routes_duration)
print(prob.best_value)
print(prob.best_routes)
print(prob.arrival_time)

print('the elapsed time:%s'% (round(time.time() - start_time, 4)))
